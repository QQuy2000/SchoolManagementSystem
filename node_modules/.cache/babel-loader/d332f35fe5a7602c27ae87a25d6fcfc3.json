{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenquocquy/Documents/INTERN FPT/light-bootstrap-dashboard-react/src/views/Resource/CustomTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport WrapTable from \"./WrapTable\";\nimport ModalDetail from \"./Modal/ModalDetail\";\nimport ModalAdd from \"./Modal/ModalAdd\";\nimport ModalEdit from \"./Modal/ModalEdit\";\nimport ModalDeleteRow from \"./Modal/ModalDeleteRow\";\nimport ModalDeleteSelected from \"./Modal/ModalDeleteSelected\";\nimport { SelectColumnFilter } from \"./WrapTable\"; // A great library for fuzzy filtering/sorting items\n\nimport { Button, Badge } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CustomTable() {\n  _s();\n\n  const columns = React.useMemo(() => [{\n    Header: \"ID\",\n    Filter: () => null,\n    accessor: row => {\n      return row.id;\n    },\n    width: 10\n  }, {\n    Header: \"Active\",\n    accessor: \"question\",\n    Filter: () => null // Use our custom `fuzzyText` filter on this column\n\n  }, {\n    Header: \"Name\",\n    accessor: \"skill\",\n    // Filter: SelectColumnFilter,\n    // filter: \"includes\",\n    Filter: () => null\n  }, {\n    Header: \"Course\",\n    accessor: \"level\",\n    // Filter: SelectColumnFilter,\n    // filter: \"includes\",\n    Filter: () => null\n  }, {\n    Header: \"Status\",\n    accessor: \"status\",\n    // Filter: SelectColumnFilter,\n    // filter: \"includes\",\n    Filter: () => null,\n    Cell: s => /*#__PURE__*/_jsxDEV(Badge, {\n      bg: s.value == 'Approve' ? 'success' : 'secondary',\n      children: s.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)\n  } // {\n  //   Header:\"Action\",\n  //   accessor: 'action',\n  //   Filter: () => null,\n  //   Cell: row => (\n  //   <div style={{display:'flex', justifyContent:'center'}}>\n  //      {/* <button onClick={e=> handleEdit(row.row.original)}>...</button> */}\n  //      <Button \n  //           onClick={()=>handleDataModal(row.row.original)}\n  //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n  //           variant=\"info\"\n  //       >\n  //           <i className=\"fas fa-info\" style={{fontSize:'18px'}}></i>\n  //       </Button>\n  //       <Button \n  //           onClick={()=>handleEditModal(row.row.original)}\n  //           variant=\"primary\"\n  //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n  //       >\n  //           <i className=\"fas fa-pen-square\" style={{fontSize:'18px'}} ></i>\n  //       </Button>\n  //       <Button \n  //           onClick={()=>handleOpenRowDeleteModal(row.row.original)}\n  //           variant=\"danger\"\n  //           style={{ height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n  //       >\n  //           <i className=\"fas fa-trash\" style={{fontSize:'18px'}}></i>\n  //       </Button>\n  //   </div>\n  //   ),\n  // }\n  ], []); //Get data\n\n  const [data, setData] = React.useState([]); //Store data in Modal when select in row(detail and edit question)\n\n  const [dataModal, setDataModal] = React.useState({}); //Modal Edit question\n\n  const [isOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [id, setId] = React.useState(null);\n  const [updateQuestion, setUpdateQuestion] = React.useState(\"\");\n  const [updateAnswer, setUpdateAnswer] = React.useState(\"\");\n  const [updateSkill, setUpdateSkill] = React.useState(\"\");\n  const [updateStatus, setUpdateStatus] = React.useState(\"\");\n  const [updateLevel, setUpdateLevel] = React.useState(\"\");\n  const [selectedRows, setSelectedRows] = React.useState([]); // render data\n\n  function getResource() {\n    fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\").then(result => {\n      result.json().then(resp => {\n        setData(resp);\n      });\n    });\n  }\n\n  useEffect(() => {\n    getResource();\n  }, []); //Modal detail question\n\n  const [isOpen, setIsOpen] = React.useState(false); //Handle Modal Detail question\n\n  const hideModal = () => {\n    setIsOpen(false);\n    setDataModal({});\n  };\n\n  const handleDataModal = data => {\n    setIsOpen(true);\n    setDataModal(data);\n  }; //Handle Modal Edit question\n\n\n  const hideModalEdit = () => {\n    setIsOpenEdit(false); // setId(null)\n\n    setUpdateQuestion(\"\");\n    setUpdateAnswer(\"\");\n    setUpdateSkill(\"\");\n    setUpdateLevel(\"\");\n    setUpdateStatus(\"\");\n  };\n\n  const handleEditModal = data => {\n    setIsOpenEdit(true);\n    setId(data.id);\n    setUpdateQuestion(data.question);\n    setUpdateAnswer(data.answer);\n    setUpdateSkill(data.skill);\n    setUpdateLevel(data.level);\n    setUpdateStatus(data.status);\n  };\n\n  const onSubmitEdit = () => {\n    let item = {\n      skill: updateSkill,\n      question: updateQuestion,\n      answer: updateAnswer,\n      status: updateStatus,\n      level: updateLevel\n    };\n    fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(result => {\n      result.json().then(() => {\n        getResource();\n        setIsOpenEdit(false);\n      });\n    });\n    setId(null);\n    setUpdateQuestion(\"\");\n    setUpdateAnswer(\"\");\n    setUpdateSkill(\"\");\n    setUpdateLevel(\"\");\n    setUpdateStatus(\"\");\n  };\n\n  {\n    /* Modal Add */\n  }\n  const [isOpenAdd, setIsOenAdd] = React.useState(false);\n\n  const handleOpenAdd = () => {\n    setIsOenAdd(true);\n    setUpdateStatus(\"Processing\");\n    const newID = ~~data[data.length - 1].id + 1;\n    setId(newID);\n  };\n\n  const hideOpenAdd = () => {\n    setIsOenAdd(false);\n    setId(null);\n    setUpdateQuestion(\"\");\n    setUpdateAnswer(\"\");\n    setUpdateSkill(\"\");\n    setUpdateLevel(\"\");\n    setUpdateStatus(\"\");\n  };\n\n  function onSubmitAdd() {\n    let item = {\n      skill: updateSkill,\n      question: updateQuestion,\n      answer: updateAnswer,\n      status: updateStatus,\n      level: updateLevel\n    };\n    fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(result => {\n      result.json().then(() => {\n        getResource();\n        setIsOenAdd(false);\n      });\n    });\n    setId(null);\n    setUpdateQuestion(\"\");\n    setUpdateAnswer(\"\");\n    setUpdateSkill(\"\");\n    setUpdateLevel(\"\");\n    setUpdateStatus(\"\");\n  }\n\n  {\n    /* Modal Delete */\n  }\n  const [isOpenDelete, setIsOenDelete] = React.useState(false);\n\n  const handleOpenDelete = () => {\n    if (selectedRows.length) {\n      setIsOenDelete(true);\n    } else {\n      window.alert('Choose questions to delete');\n    }\n  };\n\n  const hideOpenDelete = () => {\n    setIsOenDelete(false);\n    setId(null);\n    setUpdateQuestion(\"\");\n    setUpdateAnswer(\"\");\n    setUpdateSkill(\"\");\n    setUpdateLevel(\"\");\n    setUpdateStatus(\"\");\n  };\n\n  function onSumbitDeleteSelected() {\n    const idsItem = selectedRows.join(\",\");\n    console.log(idsItem);\n    console.log(typeof idsItem);\n    fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/composite/sobjects?ids=9,10`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      result.json().then(resp => {\n        console.log(resp);\n        getResource();\n        setIsOenDelete(false);\n      });\n    }).catch(error => console.log(error));\n    setSelectedRows([]);\n  }\n\n  {\n    /* Modal row Delete */\n  }\n  const [isOpenRowDeleteModal, setIsOpenRowDeleteModal] = React.useState(false);\n\n  const handleOpenRowDeleteModal = data => {\n    setIsOpenRowDeleteModal(true);\n    setDataModal(data);\n    setId(data.id);\n  };\n\n  const hideOpenRowDeleteModal = () => {\n    setIsOpenRowDeleteModal(false);\n    setDataModal({});\n    setId(null);\n  };\n\n  function onSumbitDeleteRow() {\n    fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`, {\n      method: 'DELETE'\n    }).then(result => {\n      result.json().then(() => {\n        getResource();\n        setIsOpenRowDeleteModal(false);\n      });\n    });\n    setId(null);\n    setDataModal({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WrapTable, {\n      columns: columns,\n      data: data,\n      selectedRows: selectedRows,\n      setSelectedRows: setSelectedRows,\n      handleOpenAdd: handleOpenAdd,\n      handleOpenDelete: handleOpenDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalDetail, {\n      isOpen: isOpen,\n      hideModal: hideModal,\n      dataModal: dataModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalAdd, {\n      isOpenAdd: isOpenAdd,\n      hideOpenAdd: hideOpenAdd,\n      id: id,\n      updateSkill: updateSkill,\n      setUpdateSkill: setUpdateSkill,\n      updateLevel: updateLevel,\n      setUpdateLevel: setUpdateLevel,\n      updateQuestion: updateQuestion,\n      setUpdateQuestion: setUpdateQuestion,\n      updateAnswer: updateAnswer,\n      setUpdateAnswer: setUpdateAnswer,\n      onSubmitAdd: onSubmitAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalEdit, {\n      isOpenEdit: isOpenEdit,\n      hideModalEdit: hideModalEdit,\n      id: id,\n      updateStatus: updateStatus,\n      setUpdateStatus: setUpdateStatus,\n      updateSkill: updateSkill,\n      setUpdateSkill: setUpdateSkill,\n      updateLevel: updateLevel,\n      setUpdateLevel: setUpdateLevel,\n      updateQuestion: updateQuestion,\n      setUpdateQuestion: setUpdateQuestion,\n      updateAnswer: updateAnswer,\n      setUpdateAnswer: setUpdateAnswer,\n      onSubmitEdit: onSubmitEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalDeleteSelected, {\n      isOpenDelete: isOpenDelete,\n      hideOpenDelete: hideOpenDelete,\n      selectedRows: selectedRows,\n      onSumbitDeleteSelected: onSumbitDeleteSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalDeleteRow, {\n      isOpenRowDeleteModal: isOpenRowDeleteModal,\n      hideOpenRowDeleteModal: hideOpenRowDeleteModal,\n      dataModal: dataModal,\n      onSumbitDeleteRow: onSumbitDeleteRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomTable, \"tSAjOPdvyU+WsiJ+znNZysMRpAQ=\");\n\n_c = CustomTable;\nexport default CustomTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"names":["React","useEffect","WrapTable","ModalDetail","ModalAdd","ModalEdit","ModalDeleteRow","ModalDeleteSelected","SelectColumnFilter","Button","Badge","CustomTable","columns","useMemo","Header","Filter","accessor","row","id","width","Cell","s","value","data","setData","useState","dataModal","setDataModal","isOpenEdit","setIsOpenEdit","setId","updateQuestion","setUpdateQuestion","updateAnswer","setUpdateAnswer","updateSkill","setUpdateSkill","updateStatus","setUpdateStatus","updateLevel","setUpdateLevel","selectedRows","setSelectedRows","getResource","fetch","then","result","json","resp","isOpen","setIsOpen","hideModal","handleDataModal","hideModalEdit","handleEditModal","question","answer","skill","level","status","onSubmitEdit","item","method","headers","body","JSON","stringify","isOpenAdd","setIsOenAdd","handleOpenAdd","newID","length","hideOpenAdd","onSubmitAdd","isOpenDelete","setIsOenDelete","handleOpenDelete","window","alert","hideOpenDelete","onSumbitDeleteSelected","idsItem","join","console","log","catch","error","isOpenRowDeleteModal","setIsOpenRowDeleteModal","handleOpenRowDeleteModal","hideOpenRowDeleteModal","onSumbitDeleteRow"],"sources":["/Users/nguyenquocquy/Documents/INTERN FPT/light-bootstrap-dashboard-react/src/views/Resource/CustomTable.js"],"sourcesContent":["import React,{useEffect} from \"react\";\nimport WrapTable from \"./WrapTable\";\nimport ModalDetail from \"./Modal/ModalDetail\";\nimport ModalAdd from \"./Modal/ModalAdd\";\nimport ModalEdit from \"./Modal/ModalEdit\";\nimport ModalDeleteRow from \"./Modal/ModalDeleteRow\";\nimport ModalDeleteSelected from \"./Modal/ModalDeleteSelected\";\nimport {  SelectColumnFilter  } from \"./WrapTable\";\n\n// A great library for fuzzy filtering/sorting items\nimport { Button,Badge } from \"react-bootstrap\";\n\nfunction CustomTable() {\n  const columns = React.useMemo(\n    () => [\n          {\n            Header: \"ID\",\n            Filter: () => null,\n            accessor: (row) => {return row.id},\n            width: 10,\n          },\n          {\n            Header: \"Active\",\n            accessor: \"question\",\n            Filter: () => null,\n            // Use our custom `fuzzyText` filter on this column\n          },\n          {\n            Header: \"Name\",\n            accessor: \"skill\",\n            // Filter: SelectColumnFilter,\n            // filter: \"includes\",\n            Filter: () => null,\n          },\n          {\n            Header: \"Course\",\n            accessor: \"level\",\n            // Filter: SelectColumnFilter,\n            // filter: \"includes\",\n            Filter: () => null,\n\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\",\n            // Filter: SelectColumnFilter,\n            // filter: \"includes\",\n            Filter: () => null,\n            Cell: s => (\n                <Badge bg={s.value == 'Approve' ? 'success' : 'secondary'}>\n                    {s.value}  \n                </Badge>\n            )\n          },\n          // {\n          //   Header:\"Action\",\n          //   accessor: 'action',\n          //   Filter: () => null,\n          //   Cell: row => (\n          //   <div style={{display:'flex', justifyContent:'center'}}>\n          //      {/* <button onClick={e=> handleEdit(row.row.original)}>...</button> */}\n          //      <Button \n          //           onClick={()=>handleDataModal(row.row.original)}\n          //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n          //           variant=\"info\"\n          //       >\n          //           <i className=\"fas fa-info\" style={{fontSize:'18px'}}></i>\n          //       </Button>\n          //       <Button \n          //           onClick={()=>handleEditModal(row.row.original)}\n          //           variant=\"primary\"\n          //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n          //       >\n          //           <i className=\"fas fa-pen-square\" style={{fontSize:'18px'}} ></i>\n          //       </Button>\n          //       <Button \n          //           onClick={()=>handleOpenRowDeleteModal(row.row.original)}\n          //           variant=\"danger\"\n          //           style={{ height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n          //       >\n          //           <i className=\"fas fa-trash\" style={{fontSize:'18px'}}></i>\n          //       </Button>\n          //   </div>\n          //   ),\n          // }\n        ],\n    []\n  );\n  //Get data\n  const [data, setData] = React.useState([])\n\n  //Store data in Modal when select in row(detail and edit question)\n  const [dataModal, setDataModal] = React.useState({})\n\n  //Modal Edit question\n  const [isOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [id, setId] = React.useState(null)\n  const [updateQuestion, setUpdateQuestion] = React.useState(\"\")\n  const [updateAnswer, setUpdateAnswer] = React.useState(\"\")\n  const [updateSkill, setUpdateSkill] = React.useState(\"\")\n  const [updateStatus, setUpdateStatus] = React.useState(\"\")\n  const [updateLevel, setUpdateLevel] = React.useState(\"\")\n  const [selectedRows, setSelectedRows] = React.useState([])\n\n// render data\n  function getResource() {\n    fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\").then((result) => {\n        result.json().then((resp)=>{\n            setData(resp)\n        })\n    })\n  }\n\n  useEffect(() => {\n    getResource()\n  },[])\n\n\n  //Modal detail question\n  const [isOpen, setIsOpen] = React.useState(false);\n//Handle Modal Detail question\n  const hideModal = () => {\n    setIsOpen(false);\n    setDataModal({})\n  };\n  const handleDataModal = (data) => {\n    setIsOpen(true)\n    setDataModal(data)\n  }\n\n  //Handle Modal Edit question\n  const hideModalEdit = () => {\n    setIsOpenEdit(false)\n    // setId(null)\n    setUpdateQuestion(\"\")\n    setUpdateAnswer(\"\")\n    setUpdateSkill(\"\")\n    setUpdateLevel(\"\")\n    setUpdateStatus(\"\")\n  }\n  const handleEditModal  = (data) => {\n    setIsOpenEdit(true)\n    setId(data.id)\n    setUpdateQuestion(data.question)\n    setUpdateAnswer(data.answer)\n    setUpdateSkill(data.skill)\n    setUpdateLevel(data.level)\n    setUpdateStatus(data.status)\n  } \n  const onSubmitEdit = () => {\n    let item = {\n            skill: updateSkill,\n            question: updateQuestion,\n            answer: updateAnswer,\n            status: updateStatus,\n            level: updateLevel}\n    fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`,{\n        method: 'PUT',\n        headers: {\n            'Accept' : 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n    }).then((result) => {\n        result.json().then(()=>{\n            getResource()\n            setIsOpenEdit(false)\n        })\n    })\n    setId(null)\n    setUpdateQuestion(\"\")\n    setUpdateAnswer(\"\")\n    setUpdateSkill(\"\")\n    setUpdateLevel(\"\")\n    setUpdateStatus(\"\")\n  }\n\n  {/* Modal Add */}\n  const [isOpenAdd, setIsOenAdd] = React.useState(false)\n  const handleOpenAdd = () => {\n      setIsOenAdd(true)\n      setUpdateStatus(\"Processing\")\n      const newID = ~~data[data.length - 1].id + 1;\n      setId(newID)\n\n  }\n  const hideOpenAdd = () => {\n      setIsOenAdd(false)\n      setId(null)\n      setUpdateQuestion(\"\")\n      setUpdateAnswer(\"\")\n      setUpdateSkill(\"\")\n      setUpdateLevel(\"\")\n      setUpdateStatus(\"\")\n  }\n\n  function onSubmitAdd(){\n    let item = {\n        skill: updateSkill,\n        question: updateQuestion,\n        answer: updateAnswer,\n        status: updateStatus,\n        level: updateLevel}\n    fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\",{\n        method: 'POST',\n        headers: {\n            'Accept' : 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n    }).then((result) => {\n        result.json().then(()=>{\n            getResource()\n            setIsOenAdd(false)\n        })\n    })\n    setId(null)\n    setUpdateQuestion(\"\")\n    setUpdateAnswer(\"\")\n    setUpdateSkill(\"\")\n    setUpdateLevel(\"\")\n    setUpdateStatus(\"\")\n  }\n  \n  {/* Modal Delete */}    \n  const [isOpenDelete, setIsOenDelete] = React.useState(false)\n  const handleOpenDelete = () => {\n      if(selectedRows.length){\n          setIsOenDelete(true)\n      }\n      else{\n          window.alert('Choose questions to delete')\n      }\n  }\n  const hideOpenDelete = () => {\n      setIsOenDelete(false)\n      setId(null)\n      setUpdateQuestion(\"\")\n      setUpdateAnswer(\"\")\n      setUpdateSkill(\"\")\n      setUpdateLevel(\"\")\n      setUpdateStatus(\"\")\n  }\n\n  function onSumbitDeleteSelected(){\n    const idsItem = selectedRows.join(\",\");\n    console.log(idsItem)\n    console.log(typeof idsItem)\n    fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/composite/sobjects?ids=9,10`,{\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n      },\n    }).then((result) => {\n        result.json().then((resp)=>{\n          console.log(resp)\n            getResource()\n            setIsOenDelete(false)\n        })\n    }).catch(error => console.log(error))\n    setSelectedRows([])\n  }\n\n{/* Modal row Delete */} \n   const [isOpenRowDeleteModal, setIsOpenRowDeleteModal] = React.useState(false)\n\n   const handleOpenRowDeleteModal = (data) => {\n        setIsOpenRowDeleteModal(true);\n        setDataModal(data)\n        setId(data.id)\n   }\n\n   const hideOpenRowDeleteModal = () =>{\n        setIsOpenRowDeleteModal(false)\n        setDataModal({})\n        setId(null)\n   }\n\n   function onSumbitDeleteRow(){\n    fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`,{\n        method: 'DELETE',\n    }).then((result) => {\n        result.json().then(()=>{\n            getResource()\n            setIsOpenRowDeleteModal(false)\n        })\n    })\n    setId(null)\n    setDataModal({})\n   }\n\n  return (\n    <>\n    {/* <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedRows\n            \n            },\n            null,\n            2\n          )}\n        </code>\n      </pre> */}\n\n    <WrapTable columns={columns} data={data} selectedRows={selectedRows} setSelectedRows={setSelectedRows} handleOpenAdd={handleOpenAdd} handleOpenDelete={handleOpenDelete}/>\n     \n\n    {/* Modal Detail Question  */}\n    <ModalDetail isOpen={isOpen} hideModal={hideModal} dataModal={dataModal} />\n\n    {/* Modal Add */}\n    <ModalAdd \n        isOpenAdd = {isOpenAdd} \n        hideOpenAdd = {hideOpenAdd} \n        id = {id} \n        updateSkill = {updateSkill} \n        setUpdateSkill = {setUpdateSkill}\n        updateLevel = {updateLevel}\n        setUpdateLevel = {setUpdateLevel}\n        updateQuestion = {updateQuestion}\n        setUpdateQuestion = {setUpdateQuestion}\n        updateAnswer = {updateAnswer}\n        setUpdateAnswer = {setUpdateAnswer}\n        onSubmitAdd = {onSubmitAdd}\n    />\n\n    {/* Modal edit */}\n    <ModalEdit\n            isOpenEdit = {isOpenEdit}\n            hideModalEdit = {hideModalEdit}\n            id = {id} \n            updateStatus = {updateStatus}\n            setUpdateStatus = {setUpdateStatus}\n            updateSkill = {updateSkill} \n            setUpdateSkill = {setUpdateSkill}\n            updateLevel = {updateLevel}\n            setUpdateLevel = {setUpdateLevel}\n            updateQuestion = {updateQuestion}\n            setUpdateQuestion = {setUpdateQuestion}\n            updateAnswer = {updateAnswer}\n            setUpdateAnswer = {setUpdateAnswer}\n            onSubmitEdit = {onSubmitEdit}\n    />\n\n    {/* Modal Delete Selected Questions*/}  \n    <ModalDeleteSelected \n        isOpenDelete={isOpenDelete} \n        hideOpenDelete={hideOpenDelete} \n        selectedRows={selectedRows}\n        onSumbitDeleteSelected={onSumbitDeleteSelected}\n        />\n    \n    {/* Delete Each Row  */}\n    <ModalDeleteRow \n        isOpenRowDeleteModal = { isOpenRowDeleteModal}\n        hideOpenRowDeleteModal = {hideOpenRowDeleteModal}\n        dataModal = { dataModal}\n        onSumbitDeleteRow = { onSumbitDeleteRow} \n    />\n    </>\n  );\n}\n\nexport default CustomTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}