{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenquocquy/Documents/INTERN FPT/light-bootstrap-dashboard-react/src/views/Student/CustomTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport WrapTable from \"./WrapTable\";\nimport ModalDetail from \"./Modal/ModalDetail\";\nimport ModalAdd from \"./Modal/ModalAdd\";\nimport ModalEdit from \"./Modal/ModalEdit\";\nimport ModalDeleteRow from \"./Modal/ModalDeleteRow\";\nimport ModalDeleteSelected from \"./Modal/ModalDeleteSelected\";\nimport { SelectColumnFilter } from \"./WrapTable\";\nimport './CustomTable.css'; // A great library for fuzzy filtering/sorting items\n\nimport { Button, Badge } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction handleNameClick(e) {}\n\nconst BadgeSkill = _ref => {\n  let {\n    values\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: values.map((course, id) => {\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"secondary\",\n        className: \"me-1 mb-1\",\n        style: {\n          fontSize: '0.85em'\n        },\n        children: [course.name, \" \", ' ']\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = BadgeSkill;\n\nconst BadgeStatus = _ref2 => {\n  let {\n    values\n  } = _ref2;\n  let color;\n\n  switch (values) {\n    case \"Active\":\n      color = \"success\";\n      break;\n\n    case \"Inactive\":\n      color = \"danger\";\n      break;\n\n    case \"Trial\":\n      color = \"warning\";\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Badge, {\n      bg: color,\n      className: \"me-1 mb-1\",\n      style: {\n        fontSize: '0.85em'\n      },\n      children: values\n    }, values, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = BadgeStatus;\n\nfunction CustomTable() {\n  _s();\n\n  const columns = React.useMemo(() => [{\n    Header: \"ID\",\n    Filter: () => null,\n    accessor: row => {\n      return row.id;\n    },\n    width: '5%'\n  }, {\n    Header: \" \",\n    Filter: () => null,\n    Cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.w3schools.com/howto/img_avatar.png\",\n        alt: \"image\",\n        style: {\n          height: '40px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this),\n    width: '10%'\n  }, {\n    Header: \"Status\",\n    accessor: \"status\",\n    Filter: () => null,\n    Cell: _ref3 => {\n      let {\n        cell: {\n          value\n        }\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(BadgeStatus, {\n        values: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 44\n      }, this);\n    },\n    width: '10%'\n  }, {\n    Header: \"Name\",\n    accessor: \"fullName\",\n    Filter: () => null,\n    Cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"detail-student\",\n        onClick: () => handleDataModal(row.row.original),\n        children: row.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this),\n    width: '35%'\n  } // {\n  //   Header: \"Course\",\n  //   accessor: \"course\",\n  //   Filter: () => null,\n  //   Cell: ({ cell: { value } }) => <BadgeSkill values={value} />,\n  //   width: '35%',\n  // },\n  // {\n  //   Header:\"Action\",\n  //   accessor: 'action',\n  //   Filter: () => null,\n  //   Cell: row => (\n  //   <div style={{display:'flex', justifyContent:'center'}}>\n  //      {/* <button onClick={e=> handleEdit(row.row.original)}>...</button> */}\n  //      <Button \n  //           onClick={()=>handleDataModal(row.row.original)}\n  //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n  //           variant=\"info\"\n  //       >\n  //           <i className=\"fas fa-info\" style={{fontSize:'18px'}}></i>\n  //       </Button>\n  //       <Button \n  //           onClick={()=>handleEditModal(row.row.original)}\n  //           variant=\"primary\"\n  //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n  //       >\n  //           <i className=\"fas fa-pen-square\" style={{fontSize:'18px'}} ></i>\n  //       </Button>\n  //       <Button \n  //           onClick={()=>handleOpenRowDeleteModal(row.row.original)}\n  //           variant=\"danger\"\n  //           style={{ height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n  //       >\n  //           <i className=\"fas fa-trash\" style={{fontSize:'18px'}}></i>\n  //       </Button>\n  //   </div>\n  //   ),\n  // }\n  ], []); //Get data\n\n  const [data, setData] = React.useState([]); //Store data in Modal when select in row(detail and edit question)\n\n  const [dataModal, setDataModal] = React.useState({}); //Modal Edit question\n\n  const [isOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [id, setId] = React.useState(null);\n  const [updateQuestion, setUpdateQuestion] = React.useState(\"\");\n  const [updateAnswer, setUpdateAnswer] = React.useState(\"\");\n  const [updateSkill, setUpdateSkill] = React.useState(\"\");\n  const [updateStatus, setUpdateStatus] = React.useState(\"\");\n  const [updateLevel, setUpdateLevel] = React.useState(\"\");\n  const [selectedRows, setSelectedRows] = React.useState([]); // render data\n  // function getResource() {\n  //   fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\").then((result) => {\n  //       result.json().then((resp)=>{\n  //           setData(resp)\n  //       })\n  //   })\n  // }\n\n  function getResource() {\n    fetch(\"http://localhost:8081/students\").then(result => {\n      result.json().then(resp => {\n        setData(resp);\n      });\n    });\n    console.log(data);\n  }\n\n  useEffect(() => {\n    getResource();\n  }, []); //Modal detail question\n\n  const [isOpen, setIsOpen] = React.useState(false); //Handle Modal Detail question\n\n  const hideModal = () => {\n    setIsOpen(false);\n    setDataModal({});\n  };\n\n  const handleDataModal = data => {\n    setIsOpen(true);\n    setDataModal(data);\n  }; //Handle Modal Edit question\n  // const hideModalEdit = () => {\n  //   setIsOpenEdit(false)\n  //   // setId(null)\n  //   setUpdateQuestion(\"\")\n  //   setUpdateAnswer(\"\")\n  //   setUpdateSkill(\"\")\n  //   setUpdateLevel(\"\")\n  //   setUpdateStatus(\"\")\n  // }\n  // const handleEditModal  = (data) => {\n  //   setIsOpenEdit(true)\n  //   setId(data.id)\n  //   setUpdateQuestion(data.question)\n  //   setUpdateAnswer(data.answer)\n  //   setUpdateSkill(data.skill)\n  //   setUpdateLevel(data.level)\n  //   setUpdateStatus(data.status)\n  // } \n  // const onSubmitEdit = () => {\n  //   let item = {\n  //           skill: updateSkill,\n  //           question: updateQuestion,\n  //           answer: updateAnswer,\n  //           status: updateStatus,\n  //           level: updateLevel}\n  //   fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`,{\n  //       method: 'PUT',\n  //       headers: {\n  //           'Accept' : 'application/json',\n  //           'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(item)\n  //   }).then((result) => {\n  //       result.json().then(()=>{\n  //           getResource()\n  //           setIsOpenEdit(false)\n  //       })\n  //   })\n  //   setId(null)\n  //   setUpdateQuestion(\"\")\n  //   setUpdateAnswer(\"\")\n  //   setUpdateSkill(\"\")\n  //   setUpdateLevel(\"\")\n  //   setUpdateStatus(\"\")\n  // }\n\n\n  {\n    /* Modal Add */\n  } // const [isOpenAdd, setIsOenAdd] = React.useState(false)\n  // const handleOpenAdd = () => {\n  //     setIsOenAdd(true)\n  //     setUpdateStatus(\"Processing\")\n  //     const newID = ~~data[data.length - 1].id + 1;\n  //     setId(newID)\n  // }\n  // const hideOpenAdd = () => {\n  //     setIsOenAdd(false)\n  //     setId(null)\n  //     setUpdateQuestion(\"\")\n  //     setUpdateAnswer(\"\")\n  //     setUpdateSkill(\"\")\n  //     setUpdateLevel(\"\")\n  //     setUpdateStatus(\"\")\n  // }\n  // function onSubmitAdd(){\n  //   let item = {\n  //       skill: updateSkill,\n  //       question: updateQuestion,\n  //       answer: updateAnswer,\n  //       status: updateStatus,\n  //       level: updateLevel}\n  //   fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\",{\n  //       method: 'POST',\n  //       headers: {\n  //           'Accept' : 'application/json',\n  //           'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(item)\n  //   }).then((result) => {\n  //       result.json().then(()=>{\n  //           getResource()\n  //           setIsOenAdd(false)\n  //       })\n  //   })\n  //   setId(null)\n  //   setUpdateQuestion(\"\")\n  //   setUpdateAnswer(\"\")\n  //   setUpdateSkill(\"\")\n  //   setUpdateLevel(\"\")\n  //   setUpdateStatus(\"\")\n  // }\n\n  {\n    /* Modal Delete */\n  } // const [isOpenDelete, setIsOenDelete] = React.useState(false)\n  // const handleOpenDelete = () => {\n  //     if(selectedRows.length){\n  //         setIsOenDelete(true)\n  //     }\n  //     else{\n  //         window.alert('Choose questions to delete')\n  //     }\n  // }\n  // const hideOpenDelete = () => {\n  //     setIsOenDelete(false)\n  //     setId(null)\n  //     setUpdateQuestion(\"\")\n  //     setUpdateAnswer(\"\")\n  //     setUpdateSkill(\"\")\n  //     setUpdateLevel(\"\")\n  //     setUpdateStatus(\"\")\n  // }\n  // function onSumbitDeleteSelected(){\n  //   const idsItem = selectedRows.join(\",\");\n  //   console.log(idsItem)\n  //   console.log(typeof idsItem)\n  //   fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/composite/sobjects?ids=9,10`,{\n  //       method: 'DELETE',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //   }).then((result) => {\n  //       result.json().then((resp)=>{\n  //         console.log(resp)\n  //           getResource()\n  //           setIsOenDelete(false)\n  //       })\n  //   }).catch(error => console.log(error))\n  //   setSelectedRows([])\n  // }\n\n  {\n    /* Modal row Delete */\n  } //  const [isOpenRowDeleteModal, setIsOpenRowDeleteModal] = React.useState(false)\n  //  const handleOpenRowDeleteModal = (data) => {\n  //       setIsOpenRowDeleteModal(true);\n  //       setDataModal(data)\n  //       setId(data.id)\n  //  }\n  //  const hideOpenRowDeleteModal = () =>{\n  //       setIsOpenRowDeleteModal(false)\n  //       setDataModal({})\n  //       setId(null)\n  //  }\n  //  function onSumbitDeleteRow(){\n  //   fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`,{\n  //       method: 'DELETE',\n  //   }).then((result) => {\n  //       result.json().then(()=>{\n  //           getResource()\n  //           setIsOpenRowDeleteModal(false)\n  //       })\n  //   })\n  //   setId(null)\n  //   setDataModal({})\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WrapTable, {\n      columns: columns,\n      data: data,\n      selectedRows: selectedRows,\n      setSelectedRows: setSelectedRows,\n      handleOpenAdd: handleOpenAdd,\n      handleOpenDelete: handleOpenDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalDetail, {\n      isOpen: isOpen,\n      hideModal: hideModal,\n      dataModal: dataModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomTable, \"O2GKDAHHernzvCFC0LPJrdhZsuw=\");\n\n_c3 = CustomTable;\nexport default CustomTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BadgeSkill\");\n$RefreshReg$(_c2, \"BadgeStatus\");\n$RefreshReg$(_c3, \"CustomTable\");","map":{"version":3,"names":["React","useEffect","WrapTable","ModalDetail","ModalAdd","ModalEdit","ModalDeleteRow","ModalDeleteSelected","SelectColumnFilter","Button","Badge","handleNameClick","e","BadgeSkill","values","map","course","id","fontSize","name","BadgeStatus","color","CustomTable","columns","useMemo","Header","Filter","accessor","row","width","Cell","display","justifyContent","height","cell","value","handleDataModal","original","data","setData","useState","dataModal","setDataModal","isOpenEdit","setIsOpenEdit","setId","updateQuestion","setUpdateQuestion","updateAnswer","setUpdateAnswer","updateSkill","setUpdateSkill","updateStatus","setUpdateStatus","updateLevel","setUpdateLevel","selectedRows","setSelectedRows","getResource","fetch","then","result","json","resp","console","log","isOpen","setIsOpen","hideModal","handleOpenAdd","handleOpenDelete"],"sources":["/Users/nguyenquocquy/Documents/INTERN FPT/light-bootstrap-dashboard-react/src/views/Student/CustomTable.js"],"sourcesContent":["import React,{useEffect} from \"react\";\nimport WrapTable from \"./WrapTable\";\nimport ModalDetail from \"./Modal/ModalDetail\";\nimport ModalAdd from \"./Modal/ModalAdd\";\nimport ModalEdit from \"./Modal/ModalEdit\";\nimport ModalDeleteRow from \"./Modal/ModalDeleteRow\";\nimport ModalDeleteSelected from \"./Modal/ModalDeleteSelected\";\nimport {  SelectColumnFilter  } from \"./WrapTable\";\nimport './CustomTable.css'\n// A great library for fuzzy filtering/sorting items\nimport { Button,Badge } from \"react-bootstrap\";\nfunction handleNameClick(e){\n\n}\nconst BadgeSkill = ({ values }) => {\n  return (\n      <>\n          {values.map((course, id) => {\n              return (\n                  <Badge key={id} bg=\"secondary\" className=\"me-1 mb-1\" style={{ fontSize: '0.85em' }}>{course.name} {' '}</Badge>\n              );\n          })}\n      </>\n  );\n};\nconst BadgeStatus = ({ values }) => {\n  let color;\n  switch (values) {\n      case \"Active\":\n          color = \"success\"\n          break;\n      case \"Inactive\":\n          color = \"danger\"\n          break;\n      case \"Trial\":\n          color = \"warning\"\n          break;\n  }\n  return (\n      <>\n        <Badge key={values} bg={color} className=\"me-1 mb-1\" style={{ fontSize: '0.85em' }}>{values}</Badge>\n      </>\n  );\n};\nfunction CustomTable() {\n  const columns = React.useMemo(\n    () => [\n          {\n            Header: \"ID\",\n            Filter: () => null,\n            accessor: (row) => {return row.id},\n            width: '5%',\n          },\n          {\n            Header: \" \",\n            Filter: () => null,\n            Cell: row => (\n            <div style={{display:'flex', justifyContent:'center'}}>\n                <img \n                  src=\"https://www.w3schools.com/howto/img_avatar.png\"\n                  alt=\"image\"\n                  style={{height:'40px'}}\n                />\n               \n            </div>\n            ),\n            width: '10%',\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\",\n            Filter: () => null,\n            Cell: ({ cell: { value } }) => <BadgeStatus values={value} />,\n            width: '10%',\n          },\n          {\n            Header: \"Name\",\n            accessor: \"fullName\",\n            Filter: () => null,\n            Cell: row => (\n              <div style={{display:'flex', justifyContent:'center'}}>\n                 <a className='detail-student' onClick={() =>handleDataModal(row.row.original)}> \n                    {row.value}\n                 </a>\n              </div>\n              ),\n            width: '35%',\n          },\n          // {\n          //   Header: \"Course\",\n          //   accessor: \"course\",\n          //   Filter: () => null,\n          //   Cell: ({ cell: { value } }) => <BadgeSkill values={value} />,\n          //   width: '35%',\n\n          // },\n          // {\n          //   Header:\"Action\",\n          //   accessor: 'action',\n          //   Filter: () => null,\n          //   Cell: row => (\n          //   <div style={{display:'flex', justifyContent:'center'}}>\n          //      {/* <button onClick={e=> handleEdit(row.row.original)}>...</button> */}\n          //      <Button \n          //           onClick={()=>handleDataModal(row.row.original)}\n          //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n          //           variant=\"info\"\n          //       >\n          //           <i className=\"fas fa-info\" style={{fontSize:'18px'}}></i>\n          //       </Button>\n          //       <Button \n          //           onClick={()=>handleEditModal(row.row.original)}\n          //           variant=\"primary\"\n          //           style={{marginRight: '8px', height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n          //       >\n          //           <i className=\"fas fa-pen-square\" style={{fontSize:'18px'}} ></i>\n          //       </Button>\n          //       <Button \n          //           onClick={()=>handleOpenRowDeleteModal(row.row.original)}\n          //           variant=\"danger\"\n          //           style={{ height:'40px', width:'20px', display:'flex', justifyContent:'center'}}\n          //       >\n          //           <i className=\"fas fa-trash\" style={{fontSize:'18px'}}></i>\n          //       </Button>\n          //   </div>\n          //   ),\n          // }\n        ],\n    []\n  );\n  //Get data\n  const [data, setData] = React.useState([])\n\n  //Store data in Modal when select in row(detail and edit question)\n  const [dataModal, setDataModal] = React.useState({})\n\n  //Modal Edit question\n  const [isOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [id, setId] = React.useState(null)\n  const [updateQuestion, setUpdateQuestion] = React.useState(\"\")\n  const [updateAnswer, setUpdateAnswer] = React.useState(\"\")\n  const [updateSkill, setUpdateSkill] = React.useState(\"\")\n  const [updateStatus, setUpdateStatus] = React.useState(\"\")\n  const [updateLevel, setUpdateLevel] = React.useState(\"\")\n  const [selectedRows, setSelectedRows] = React.useState([])\n\n// render data\n  // function getResource() {\n  //   fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\").then((result) => {\n  //       result.json().then((resp)=>{\n  //           setData(resp)\n  //       })\n  //   })\n  // }\n  function getResource() {\n    fetch(\"http://localhost:8081/students\").then((result) => {\n        result.json().then((resp)=>{\n            setData(resp)\n        })\n    })\n    console.log(data)\n  }\n\n  useEffect(() => {\n    getResource()\n  },[])\n\n\n  //Modal detail question\n  const [isOpen, setIsOpen] = React.useState(false);\n//Handle Modal Detail question\n  const hideModal = () => {\n    setIsOpen(false);\n    setDataModal({})\n  };\n  const handleDataModal = (data) => {\n    setIsOpen(true)\n    setDataModal(data)\n  }\n\n  //Handle Modal Edit question\n  // const hideModalEdit = () => {\n  //   setIsOpenEdit(false)\n  //   // setId(null)\n  //   setUpdateQuestion(\"\")\n  //   setUpdateAnswer(\"\")\n  //   setUpdateSkill(\"\")\n  //   setUpdateLevel(\"\")\n  //   setUpdateStatus(\"\")\n  // }\n  // const handleEditModal  = (data) => {\n  //   setIsOpenEdit(true)\n  //   setId(data.id)\n  //   setUpdateQuestion(data.question)\n  //   setUpdateAnswer(data.answer)\n  //   setUpdateSkill(data.skill)\n  //   setUpdateLevel(data.level)\n  //   setUpdateStatus(data.status)\n  // } \n  // const onSubmitEdit = () => {\n  //   let item = {\n  //           skill: updateSkill,\n  //           question: updateQuestion,\n  //           answer: updateAnswer,\n  //           status: updateStatus,\n  //           level: updateLevel}\n  //   fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`,{\n  //       method: 'PUT',\n  //       headers: {\n  //           'Accept' : 'application/json',\n  //           'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(item)\n  //   }).then((result) => {\n  //       result.json().then(()=>{\n  //           getResource()\n  //           setIsOpenEdit(false)\n  //       })\n  //   })\n  //   setId(null)\n  //   setUpdateQuestion(\"\")\n  //   setUpdateAnswer(\"\")\n  //   setUpdateSkill(\"\")\n  //   setUpdateLevel(\"\")\n  //   setUpdateStatus(\"\")\n  // }\n\n  {/* Modal Add */}\n  // const [isOpenAdd, setIsOenAdd] = React.useState(false)\n  // const handleOpenAdd = () => {\n  //     setIsOenAdd(true)\n  //     setUpdateStatus(\"Processing\")\n  //     const newID = ~~data[data.length - 1].id + 1;\n  //     setId(newID)\n\n  // }\n  // const hideOpenAdd = () => {\n  //     setIsOenAdd(false)\n  //     setId(null)\n  //     setUpdateQuestion(\"\")\n  //     setUpdateAnswer(\"\")\n  //     setUpdateSkill(\"\")\n  //     setUpdateLevel(\"\")\n  //     setUpdateStatus(\"\")\n  // }\n\n  // function onSubmitAdd(){\n  //   let item = {\n  //       skill: updateSkill,\n  //       question: updateQuestion,\n  //       answer: updateAnswer,\n  //       status: updateStatus,\n  //       level: updateLevel}\n  //   fetch(\"https://62c7db500f32635590cba090.mockapi.io/resources\",{\n  //       method: 'POST',\n  //       headers: {\n  //           'Accept' : 'application/json',\n  //           'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(item)\n  //   }).then((result) => {\n  //       result.json().then(()=>{\n  //           getResource()\n  //           setIsOenAdd(false)\n  //       })\n  //   })\n  //   setId(null)\n  //   setUpdateQuestion(\"\")\n  //   setUpdateAnswer(\"\")\n  //   setUpdateSkill(\"\")\n  //   setUpdateLevel(\"\")\n  //   setUpdateStatus(\"\")\n  // }\n  \n  {/* Modal Delete */}    \n  // const [isOpenDelete, setIsOenDelete] = React.useState(false)\n  // const handleOpenDelete = () => {\n  //     if(selectedRows.length){\n  //         setIsOenDelete(true)\n  //     }\n  //     else{\n  //         window.alert('Choose questions to delete')\n  //     }\n  // }\n  // const hideOpenDelete = () => {\n  //     setIsOenDelete(false)\n  //     setId(null)\n  //     setUpdateQuestion(\"\")\n  //     setUpdateAnswer(\"\")\n  //     setUpdateSkill(\"\")\n  //     setUpdateLevel(\"\")\n  //     setUpdateStatus(\"\")\n  // }\n\n  // function onSumbitDeleteSelected(){\n  //   const idsItem = selectedRows.join(\",\");\n  //   console.log(idsItem)\n  //   console.log(typeof idsItem)\n  //   fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/composite/sobjects?ids=9,10`,{\n  //       method: 'DELETE',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //   }).then((result) => {\n  //       result.json().then((resp)=>{\n  //         console.log(resp)\n  //           getResource()\n  //           setIsOenDelete(false)\n  //       })\n  //   }).catch(error => console.log(error))\n  //   setSelectedRows([])\n  // }\n\n{/* Modal row Delete */} \n  //  const [isOpenRowDeleteModal, setIsOpenRowDeleteModal] = React.useState(false)\n\n  //  const handleOpenRowDeleteModal = (data) => {\n  //       setIsOpenRowDeleteModal(true);\n  //       setDataModal(data)\n  //       setId(data.id)\n  //  }\n\n  //  const hideOpenRowDeleteModal = () =>{\n  //       setIsOpenRowDeleteModal(false)\n  //       setDataModal({})\n  //       setId(null)\n  //  }\n\n  //  function onSumbitDeleteRow(){\n  //   fetch(`https://62c7db500f32635590cba090.mockapi.io/resources/${id}`,{\n  //       method: 'DELETE',\n  //   }).then((result) => {\n  //       result.json().then(()=>{\n  //           getResource()\n  //           setIsOpenRowDeleteModal(false)\n  //       })\n  //   })\n  //   setId(null)\n  //   setDataModal({})\n  //  }\n\n  return (\n    <>\n    {/* <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedRows\n            \n            },\n            null,\n            2\n          )}\n        </code>\n      </pre> */}\n\n    <WrapTable columns={columns} data={data} selectedRows={selectedRows} setSelectedRows={setSelectedRows} handleOpenAdd={handleOpenAdd} handleOpenDelete={handleOpenDelete}/>\n     \n\n    {/* Modal Detail Question  */}\n    <ModalDetail isOpen={isOpen} hideModal={hideModal} dataModal={dataModal} />\n\n    {/* Modal Add */}\n    {/* <ModalAdd \n        isOpenAdd = {isOpenAdd} \n        hideOpenAdd = {hideOpenAdd} \n        id = {id} \n        updateSkill = {updateSkill} \n        setUpdateSkill = {setUpdateSkill}\n        updateLevel = {updateLevel}\n        setUpdateLevel = {setUpdateLevel}\n        updateQuestion = {updateQuestion}\n        setUpdateQuestion = {setUpdateQuestion}\n        updateAnswer = {updateAnswer}\n        setUpdateAnswer = {setUpdateAnswer}\n        onSubmitAdd = {onSubmitAdd}\n    /> */}\n\n    {/* Modal edit */}\n    {/* <ModalEdit\n            isOpenEdit = {isOpenEdit}\n            hideModalEdit = {hideModalEdit}\n            id = {id} \n            updateStatus = {updateStatus}\n            setUpdateStatus = {setUpdateStatus}\n            updateSkill = {updateSkill} \n            setUpdateSkill = {setUpdateSkill}\n            updateLevel = {updateLevel}\n            setUpdateLevel = {setUpdateLevel}\n            updateQuestion = {updateQuestion}\n            setUpdateQuestion = {setUpdateQuestion}\n            updateAnswer = {updateAnswer}\n            setUpdateAnswer = {setUpdateAnswer}\n            onSubmitEdit = {onSubmitEdit}\n    /> */}\n\n    {/* Modal Delete Selected Questions*/}  \n    {/* <ModalDeleteSelected \n        isOpenDelete={isOpenDelete} \n        hideOpenDelete={hideOpenDelete} \n        selectedRows={selectedRows}\n        onSumbitDeleteSelected={onSumbitDeleteSelected}\n        /> */}\n    \n    {/* Delete Each Row  */}\n    {/* <ModalDeleteRow \n        isOpenRowDeleteModal = { isOpenRowDeleteModal}\n        hideOpenRowDeleteModal = {hideOpenRowDeleteModal}\n        dataModal = { dataModal}\n        onSumbitDeleteRow = { onSumbitDeleteRow} \n    /> */}\n    </>\n  );\n}\n\nexport default CustomTable;\n"],"mappings":"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AEP,EAFO,CAAT,CAvHqB,CA4HrB;;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBnE,KAAK,CAACwC,QAAN,CAAe,KAAf,CAA5B,CA7HqB,CA8HvB;;EACE,MAAM4B,SAAS,GAAG,MAAM;IACtBD,SAAS,CAAC,KAAD,CAAT;IACAzB,YAAY,CAAC,EAAD,CAAZ;EACD,CAHD;;EAIA,MAAMN,eAAe,GAAIE,IAAD,IAAU;IAChC6B,SAAS,CAAC,IAAD,CAAT;IACAzB,YAAY,CAACJ,IAAD,CAAZ;EACD,CAHD,CAnIqB,CAwIrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA;IAAC;EAAgB,CAvLI,CAwLrB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAC;EAAmB,CAtOC,CAuOrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF;IAAC;EAAuB,CA7QD,CA8QrB;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBAcA,QAAC,SAAD;MAAW,OAAO,EAAEf,OAApB;MAA6B,IAAI,EAAEe,IAAnC;MAAyC,YAAY,EAAEkB,YAAvD;MAAqE,eAAe,EAAEC,eAAtF;MAAuG,aAAa,EAAEY,aAAtH;MAAqI,gBAAgB,EAAEC;IAAvJ;MAAA;MAAA;MAAA;IAAA,QAdA,eAkBA,QAAC,WAAD;MAAa,MAAM,EAAEJ,MAArB;MAA6B,SAAS,EAAEE,SAAxC;MAAmD,SAAS,EAAE3B;IAA9D;MAAA;MAAA;MAAA;IAAA,QAlBA;EAAA,gBADF;AAwED;;GAjXQnB,W;;MAAAA,W;AAmXT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}