{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenquocquy/Desktop/INTERN FPT/light-bootstrap-dashboard-react/src/views/ResourceTable/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, usePagination, useGlobalFilter, useSortBy, useAsyncDebounce, useFilters } from \"react-table\"; // A great library for fuzzy filtering/sorting items\n\nimport { Table, Input, Label } from \"reactstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport makeData from \"./makeData\"; // Define a default UI for filtering\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DefaultColumnFilter(_ref) {\n  let {\n    column: {\n      filterValue,\n      preFilteredRows,\n      setFilter\n    }\n  } = _ref;\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-0\",\n    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n      onClick: e => e.stopPropagation(),\n      type: \"search\",\n      value: filterValue || \"\",\n      onChange: e => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      },\n      placeholder: `Search ${count} records...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_c = DefaultColumnFilter;\n\nfunction SelectColumnFilter(_ref2) {\n  _s();\n\n  let {\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  } = _ref2;\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    type: \"select\",\n    value: filterValue,\n    onClick: e => e.stopPropagation(),\n    onChange: e => {\n      setFilter(e.target.value || undefined);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n} // This is a custom filter UI that uses a\n// slider to set the filter value between a column's\n// min and max values\n\n\n_s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c2 = SelectColumnFilter;\n\nfunction SliderColumnFilter(_ref3) {\n  _s2();\n\n  let {\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  } = _ref3;\n  // Calculate the min and max\n  // using the preFilteredRows\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach(row => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      onClick: e => e.stopPropagation(),\n      type: \"range\",\n      min: min,\n      max: max,\n      value: filterValue || min,\n      onChange: e => {\n        setFilter(parseInt(e.target.value, 10));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      onClick: e => {\n        setFilter(undefined);\n        e.stopPropagation();\n      },\n      children: \"Off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n} // This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\n\n\n_s2(SliderColumnFilter, \"JjGt0968bxIn2DIWJAwn7XKKSys=\");\n\n_c3 = SliderColumnFilter;\n\nfunction NumberRangeColumnFilter(_ref4) {\n  _s3();\n\n  let {\n    column: {\n      filterValue = [],\n      preFilteredRows,\n      setFilter,\n      id\n    }\n  } = _ref4;\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach(row => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      value: filterValue[0] || \"\",\n      type: \"number\",\n      onClick: e => e.stopPropagation(),\n      onChange: e => {\n        const val = e.target.value;\n        setFilter(function () {\n          let old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          return [val ? parseInt(val, 10) : undefined, old[1]];\n        });\n      },\n      placeholder: `Min (${min})`,\n      style: {\n        width: \"70px\",\n        marginRight: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: e => e.stopPropagation(),\n      children: \"to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      value: filterValue[1] || \"\",\n      type: \"number\",\n      onClick: e => e.stopPropagation(),\n      onChange: e => {\n        const val = e.target.value;\n        setFilter(function () {\n          let old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          return [old[0], val ? parseInt(val, 10) : undefined];\n        });\n      },\n      placeholder: `Max (${max})`,\n      style: {\n        width: \"70px\",\n        marginLeft: \"0.5rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(NumberRangeColumnFilter, \"JjGt0968bxIn2DIWJAwn7XKKSys=\");\n\n_c4 = NumberRangeColumnFilter;\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val;\n\nfunction WrapTable(_ref5) {\n  _s4();\n\n  let {\n    columns,\n    data,\n    handleReset\n  } = _ref5;\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our default Filter UI\n    Filter: DefaultColumnFilter\n  }), []);\n  const props = useTable({\n    columns,\n    data,\n    defaultColumn\n  }, useFilters, useGlobalFilter, // useGlobalFilter!\n  useSortBy, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter,\n    state,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize,\n      globalFilter\n    }\n  } = props; // console.log(props);\n\n  React.useEffect(() => {\n    // props.dispatch({ type: actions.resetPage })\n    console.log(globalFilter);\n  }, [globalFilter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-end pb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-3\",\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          className: \"mb-0\",\n          children: \"Search: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-3\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"search\",\n          value: globalFilter || \"\",\n          onChange: e => setGlobalFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-fill\",\n        style: {\n          minWidth: \"140px\"\n        },\n        onClick: handleReset,\n        children: \"Reset Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n      td,tr,th{\n        text-align: center;\n      }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      striped: true,\n      hover: true,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"heading\",\n              style: {\n                fontSize: \"16px\",\n                fontWeight: \"600\",\n                display: \"flex\",\n                justifyContent: \"center\"\n              },\n              children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? \" 🔽\" : \" 🔼\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render(\"Filter\") : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination d-flex align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-fill mr-3\",\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-fill mr-3\",\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-fill mr-3\",\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-fill mr-5\",\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-3 ml-5\",\n        children: [\"Page\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-3\",\n        children: \" Go to page: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        className: \"mr-3\",\n        defaultValue: pageIndex + 1,\n        onChange: e => {\n          const page = e.target.value ? Number(e.target.value) - 1 : 0;\n          gotoPage(page);\n        },\n        style: {\n          width: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"select\",\n          value: pageSize,\n          onChange: e => {\n            setPageSize(Number(e.target.value));\n          },\n          children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // Define a custom filter filter function!\n\n\n_s4(WrapTable, \"7u75P0k21fmfyF+WRQxrfgzcPDo=\", false, function () {\n  return [useTable];\n});\n\n_c5 = WrapTable;\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(row => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\nfilterGreaterThan.autoRemove = val => typeof val !== \"number\";\n\nfunction CustomTable() {\n  _s5();\n\n  const columns = React.useMemo(() => [{\n    Header: \"RESOURCE\",\n    columns: [{\n      Header: \"Code\",\n      accessor: \"firstName\"\n    }, {\n      Header: \"Question\",\n      accessor: \"lastName\" // Use our custom `fuzzyText` filter on this column\n\n    }, {\n      Header: \"Skill\",\n      accessor: \"age\",\n      Filter: SelectColumnFilter,\n      filter: \"includes\"\n    }, {\n      Header: \"Level\",\n      accessor: \"visits\" // Filter: NumberRangeColumnFilter,\n      // filter: \"between\",\n\n    }, {\n      Header: \"Status\",\n      accessor: \"status\",\n      Filter: SelectColumnFilter,\n      filter: \"includes\"\n    } //   {\n    //     Header: \"Profile Progress\",\n    //     accessor: \"progress\",\n    //     Filter: SliderColumnFilter,\n    //     filter: filterGreaterThan,\n    //   },\n    ]\n  }], []); // const data = React.useMemo(() => makeData(100), []);\n\n  const [data, setData] = React.useState(makeData(1000)); // React.useEffect(() => {\n  //   setData(makeData(100));\n  // }, []);\n\n  const handleReset = () => {\n    setData(makeData(1000));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WrapTable, {\n      columns: columns,\n      data: data,\n      handleReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s5(CustomTable, \"bevtJ5RM6ZRsO+bMYzuy/4OOId0=\");\n\n_c6 = CustomTable;\nexport default CustomTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"SliderColumnFilter\");\n$RefreshReg$(_c4, \"NumberRangeColumnFilter\");\n$RefreshReg$(_c5, \"WrapTable\");\n$RefreshReg$(_c6, \"CustomTable\");","map":{"version":3,"names":["React","useTable","usePagination","useGlobalFilter","useSortBy","useAsyncDebounce","useFilters","Table","Input","Label","Button","Form","makeData","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","stopPropagation","target","value","undefined","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","SliderColumnFilter","min","max","Math","parseInt","NumberRangeColumnFilter","display","alignItems","justifyContent","val","old","width","marginRight","marginLeft","fuzzyTextFilterFn","rows","matchSorter","keys","autoRemove","WrapTable","columns","data","handleReset","defaultColumn","Filter","props","getTableProps","getTableBodyProps","headerGroups","prepareRow","setGlobalFilter","state","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","pageSize","globalFilter","useEffect","console","log","minWidth","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","fontSize","fontWeight","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","Number","filterGreaterThan","filter","rowValue","CustomTable","Header","accessor","setData","useState"],"sources":["/Users/nguyenquocquy/Desktop/INTERN FPT/light-bootstrap-dashboard-react/src/views/ResourceTable/index.js"],"sourcesContent":["import React from \"react\";\nimport {\n  useTable,\n  usePagination,\n  useGlobalFilter,\n  useSortBy,\n  useAsyncDebounce,\n  useFilters,\n} from \"react-table\";\n\n// A great library for fuzzy filtering/sorting items\nimport { Table, Input, Label } from \"reactstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport makeData from \"./makeData\";\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <Form.Group className=\"mb-0\">\n      <Form.Control\n        onClick={(e) => e.stopPropagation()}\n        type=\"search\"\n        value={filterValue || \"\"}\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`Search ${count} records...`}\n      ></Form.Control>\n    </Form.Group>\n  );\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nfunction SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  // Render a multi-select box\n  return (\n    <Input\n      type=\"select\"\n      value={filterValue}\n      onClick={(e) => e.stopPropagation()}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </Input>\n  );\n}\n\n// This is a custom filter UI that uses a\n// slider to set the filter value between a column's\n// min and max values\nfunction SliderColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the min and max\n  // using the preFilteredRows\n\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach((row) => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center mt-2\">\n      <Form.Control\n        onClick={(e) => e.stopPropagation()}\n        type=\"range\"\n        min={min}\n        max={max}\n        value={filterValue || min}\n        onChange={(e) => {\n          setFilter(parseInt(e.target.value, 10));\n        }}\n      ></Form.Control>\n      <Button\n        variant=\"primary\"\n        size=\"sm\"\n        onClick={(e) => {\n          setFilter(undefined);\n          e.stopPropagation();\n        }}\n      >\n        Off\n      </Button>\n    </div>\n  );\n}\n\n// This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\nfunction NumberRangeColumnFilter({\n  column: { filterValue = [], preFilteredRows, setFilter, id },\n}) {\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach((row) => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <Form.Control\n        value={filterValue[0] || \"\"}\n        type=\"number\"\n        onClick={(e) => e.stopPropagation()}\n        onChange={(e) => {\n          const val = e.target.value;\n          setFilter((old = []) => [\n            val ? parseInt(val, 10) : undefined,\n            old[1],\n          ]);\n        }}\n        placeholder={`Min (${min})`}\n        style={{\n          width: \"70px\",\n          marginRight: \"0.5rem\",\n        }}\n      />\n      <span onClick={(e) => e.stopPropagation()}>to</span>\n      <Form.Control\n        value={filterValue[1] || \"\"}\n        type=\"number\"\n        onClick={(e) => e.stopPropagation()}\n        onChange={(e) => {\n          const val = e.target.value;\n          setFilter((old = []) => [\n            old[0],\n            val ? parseInt(val, 10) : undefined,\n          ]);\n        }}\n        placeholder={`Max (${max})`}\n        style={{\n          width: \"70px\",\n          marginLeft: \"0.5rem\",\n        }}\n      />\n    </div>\n  );\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\n\nfunction WrapTable({ columns, data, handleReset }) {\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n  const props = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n    },\n    useFilters,\n    useGlobalFilter, // useGlobalFilter!\n    useSortBy,\n    usePagination\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter,\n    state,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize, globalFilter },\n  } = props;\n  // console.log(props);\n  React.useEffect(() => {\n    // props.dispatch({ type: actions.resetPage })\n    console.log(globalFilter);\n  }, [globalFilter]);\n\n  return (\n    <>\n      <div className=\"d-flex align-items-center justify-content-end pb-3\">\n        <div className=\"mr-3\">\n          <Label className=\"mb-0\">Search: </Label>\n        </div>\n        <div className=\"mr-3\">\n          <Input\n            type=\"search\"\n            value={globalFilter || \"\"}\n            onChange={(e) => setGlobalFilter(e.target.value)}\n          />\n        </div>\n        <Button\n          className=\"btn-fill\"\n          style={{ minWidth: \"140px\" }}\n          onClick={handleReset}\n        >\n          Reset Data\n        </Button>\n      </div>\n      <style>{`\n      td,tr,th{\n        text-align: center;\n      }\n      `}</style>\n      <Table bordered striped hover {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  <div\n                    className=\"heading\"\n                    style={{\n                      fontSize: \"16px\",\n                      fontWeight: \"600\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {column.render(\"Header\")}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? \" 🔽\"\n                          : \" 🔼\"\n                        : \"\"}\n                    </span>\n                  </div>\n                  {/* Render the columns filter UI */}\n\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div className=\"pagination d-flex align-items-center justify-content-center\">\n        <Button\n          className=\"btn-fill mr-3\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n        >\n          {\"<<\"}\n        </Button>\n        <Button\n          className=\"btn-fill mr-3\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          {\"<\"}\n        </Button>\n        <Button\n          className=\"btn-fill mr-3\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n        >\n          {\">\"}\n        </Button>\n        <Button\n          className=\"btn-fill mr-5\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {\">>\"}\n        </Button>\n        <span className=\"mr-3 ml-5\">\n          Page\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>\n        </span>\n        <span className=\"mr-3\"> Go to page: </span>\n        <Input\n          type=\"number\"\n          className=\"mr-3\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          }}\n          style={{ width: \"100px\" }}\n        />\n        <div className=\"\">\n          <Input\n            type=\"select\"\n            value={pageSize}\n            onChange={(e) => {\n              setPageSize(Number(e.target.value));\n            }}\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </Input>\n        </div>\n      </div>\n      <br />\n    </>\n  );\n}\n\n// Define a custom filter filter function!\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter((row) => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\n\nfunction CustomTable() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"RESOURCE\",\n        columns: [\n            {\n            Header: \"Code\",\n            accessor: \"firstName\",\n          },\n          {\n            Header: \"Question\",\n            accessor: \"lastName\",\n            // Use our custom `fuzzyText` filter on this column\n          },\n          {\n            Header: \"Skill\",\n            accessor: \"age\",\n            Filter: SelectColumnFilter,\n            filter: \"includes\",\n          },\n          {\n            Header: \"Level\",\n            accessor: \"visits\",\n            // Filter: NumberRangeColumnFilter,\n            // filter: \"between\",\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\",\n            Filter: SelectColumnFilter,\n            filter: \"includes\",\n          },\n        //   {\n        //     Header: \"Profile Progress\",\n        //     accessor: \"progress\",\n        //     Filter: SliderColumnFilter,\n        //     filter: filterGreaterThan,\n        //   },\n        ],\n      },\n    ],\n    []\n  );\n\n  // const data = React.useMemo(() => makeData(100), []);\n  const [data, setData] = React.useState(makeData(1000));\n\n  // React.useEffect(() => {\n  //   setData(makeData(100));\n  // }, []);\n  const handleReset = () => {\n    setData(makeData(1000));\n  };\n\n  return (\n    <>\n      <WrapTable columns={columns} data={data} handleReset={handleReset} />\n    </>\n  );\n}\n\nexport default CustomTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}