{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { loginService } from \"service/Login/LoginService\";\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    isLoading: false,\n    isLogin: false\n  },\n  reducers: {\n    loginChange: (state, action) => {\n      state.isLogin = !state.isLogin;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchLogin.fulfilled, (state, action) => {\n      state.isLogin = true;\n      state.isLoading = false;\n    }).addCase(fetchLogin.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(fetchLogin.rejected, (state, action) => {});\n  }\n});\nexport const fetchLogin = createAsyncThunk('login/fetchLogin', async (params, thunkAPI) => {\n  const res = await loginService.Login(params.data);\n\n  if ((res === null || res === void 0 ? void 0 : res.success) === false && res.success != null) {\n    return thunkAPI.rejectWithValue(res.response);\n  }\n\n  return res.data;\n});\nexport const {\n  loginChange\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginService","loginSlice","name","initialState","isLoading","isLogin","reducers","loginChange","state","action","extraReducers","builder","addCase","fetchLogin","fulfilled","pending","rejected","params","thunkAPI","res","Login","data","success","rejectWithValue","response","actions","reducer"],"sources":["/Users/nguyenquocquy/Documents/ThaÌ€nh Project/Front-end/src/redux/loginSlice/index.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { loginService } from \"service/Login/LoginService\";\n\nconst loginSlice = createSlice({\n    name: \"login\",\n    initialState:{\n        isLoading: false,\n        isLogin: false,\n    },\n    reducers: {\n        loginChange:(state, action) => {\n            state.isLogin = !state.isLogin;\n        },\n    },\n    extraReducers:(builder) =>{\n        builder\n            .addCase(fetchLogin.fulfilled, (state, action) => {\n                state.isLogin = true\n                state.isLoading = false\n            })\n            .addCase(fetchLogin.pending, (state, action) => {\n                state.isLoading = true\n            })\n            .addCase(fetchLogin.rejected, (state, action) => {\n            })\n    }\n})\n\nexport const fetchLogin = createAsyncThunk(\n    'login/fetchLogin', async (params, thunkAPI) => {\n        const res = await loginService.Login(params.data);\n        if(res?.success === false && res.success != null){\n            return thunkAPI.rejectWithValue(res.response)\n        }\n        return res.data\n    }\n)\nexport const {loginChange} = loginSlice.actions;\nexport default loginSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,OADqB;EAE3BC,YAAY,EAAC;IACTC,SAAS,EAAE,KADF;IAETC,OAAO,EAAE;EAFA,CAFc;EAM3BC,QAAQ,EAAE;IACNC,WAAW,EAAC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACH,OAAN,GAAgB,CAACG,KAAK,CAACH,OAAvB;IACH;EAHK,CANiB;EAW3BK,aAAa,EAAEC,OAAD,IAAY;IACtBA,OAAO,CACFC,OADL,CACaC,UAAU,CAACC,SADxB,EACmC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAC9CD,KAAK,CAACH,OAAN,GAAgB,IAAhB;MACAG,KAAK,CAACJ,SAAN,GAAkB,KAAlB;IACH,CAJL,EAKKQ,OALL,CAKaC,UAAU,CAACE,OALxB,EAKiC,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAC5CD,KAAK,CAACJ,SAAN,GAAkB,IAAlB;IACH,CAPL,EAQKQ,OARL,CAQaC,UAAU,CAACG,QARxB,EAQkC,CAACR,KAAD,EAAQC,MAAR,KAAmB,CAChD,CATL;EAUH;AAtB0B,CAAD,CAA9B;AAyBA,OAAO,MAAMI,UAAU,GAAGd,gBAAgB,CACtC,kBADsC,EAClB,OAAOkB,MAAP,EAAeC,QAAf,KAA4B;EAC5C,MAAMC,GAAG,GAAG,MAAMnB,YAAY,CAACoB,KAAb,CAAmBH,MAAM,CAACI,IAA1B,CAAlB;;EACA,IAAG,CAAAF,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,OAAL,MAAiB,KAAjB,IAA0BH,GAAG,CAACG,OAAJ,IAAe,IAA5C,EAAiD;IAC7C,OAAOJ,QAAQ,CAACK,eAAT,CAAyBJ,GAAG,CAACK,QAA7B,CAAP;EACH;;EACD,OAAOL,GAAG,CAACE,IAAX;AACH,CAPqC,CAAnC;AASP,OAAO,MAAM;EAACd;AAAD,IAAgBN,UAAU,CAACwB,OAAjC;AACP,eAAexB,UAAU,CAACyB,OAA1B"},"metadata":{},"sourceType":"module"}